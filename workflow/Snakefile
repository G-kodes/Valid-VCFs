from snakemake.utils import min_version, validate
import os

min_version("6.0")


# DEFINE CONFIG FILE FOR SNAKEMAKE:
configfile: os.path.join("config", "config.json")


validate(config, os.path.join("..", "config", "config.schema.json"))


include: "rules/init.smk"


DataPrepList = DataPrepRequirements()


rule all:
    """
    Request validation for all .vcf files given in the `resources/data` folder
    """

    input:
        expand(
            "results/VALIDATED/{filename}.{ext}",
            filename=DataPrepList["ALL"],
            ext=["vcf.gz", "vcf.gz.tbi"],
        ),


rule CP:
    """
    Copy any VCF files that have already been BG-Zipped and have a Tabix Index accross
    """

    log:
        "results/PREPARED/CP_V_{name}.log",
    input:
        "resources/data/{name}.vc{ext}",
    output:
        "results/PREPARED/{name}.vc{ext}",
    shell:
        """
        CP {input} {output}
        """


rule BGZIP:
    """
    BGZIP a given un-zipped VCF file.
    """

    log:
        "results/PREPARED/BGZIP_{name}.log",
    input:
        "resources/data/{name}.vcf",
    output:
        "results/PREPARED/{name}.vcf.gz",
    conda:
        "envs/GATK4.yaml"
    resources:
        cpus=10,
        nodes=1,
        queue="long",
        walltime="900:00:00",
    shell:
        """
        bgzip {input}
        """


rule TABIX_INDEXING:
    """
    Generate a Tabix index for the given VCF file
    """

    log:
        "results/PREPARED/TABIX_INDEXING_{name}.log",
    input:
        "results/PREPARED/{name}.vcf.gz",
    output:
        "results/PREPARED/{name}.vcf.gz.tbi",
    resources:
        cpus=10,
        nodes=1,
        queue="long",
        walltime="900:00:00",
    shell:
        """
        tabix -f -p vcf {input}
        """


rule FORMAT_VALIDATION:
    """
    Perform spec validation of VCF format.
    """

    log:
        "logs/VALIDATED/FORMAT_VALIDATION_{name}.log",
    input:
        "results/PREPARED/{name}.vcf.gz",
        "results/PREPARED/{name}.vcf.gz.tbi",
    output:
        "results/VALIDATED/{name}.vcf.gz",
    params:
        ref=config["Reference Genome"]["Path"],
        dbsnp=config["dbSNP"]["Path"],
        memory="128G",
    resources:
        cpus=10,
        nodes=1,
        queue="long",
        walltime="900:00:00",
    conda:
        "envs/GATK4.yaml"
    shell:
        """
        gatk ValidateVariants -V {input} -R {params.ref} -D {params.dbsnp}
        """
