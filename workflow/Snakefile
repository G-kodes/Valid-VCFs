from snakemake.utils import min_version, validate
import os

min_version("6.0")


# DEFINE CONFIG FILE FOR SNAKEMAKE:
configfile: os.path.join("config", "config.json")


validate(config, os.path.join("..", "config", "config.schema.json"))

include: "rules/init.smk"
DataPrepList = DataPrepRequirements()

rule all:
    """
    Request validation for all .vcf files given in the `resources/data` folder
    """

    input:
        expand("results/{filename}.vcf.gz", filename=DataPrepList['gzVCF']),
        expand("results/{filename}.vcf.gz.tbi", filename=DataPrepList['TABIX'])


rule BGZIP:
    """
    BGZIP a given un-zipped VCF file.
    """

    log:
        "logs/BGZIP/{name}.log",
    input:
        "{path}/{name}.vcf",
    output:
        "{path}/{name}.vcf.gz",
    conda: "envs/GATK4.yaml"
    shell:
        """
        bgzip {input}
        """


rule TABIX_INDEXING:
    """
    Generate a Tabix index for the given VCF file
    """

    log:
        "logs/TABIX_INDEXING/{name}.log",
    input:
        "{folder}/{name}.vcf.gz",
    output:
        "{folder}/{name}.vcf.gz",
        "{folder}/{name}.vcf.gz.tbi",
    shell:
        """
        tabix -f -p vcf {input}
        """


rule FORMAT_VALIDATION:
    """
    Perform spec validation of VCF format.
    """

    log:
        "logs/FORMAT_VALIDATION/{sample}.log",
    input:
        "resources/{sample}.vcf.gz",
    output:
        "results/FORMAT_VALIDATION/{sample}.vcf.gz",
    params:
        ref=config["Reference Genome"]["Path"],
        dbsnp=config["dbSNP"]["Path"],
        memory="128G",
    resources:
        cpus=10,
        nodes=1,
        queue="long",
        walltime="900:00:00",
    conda:
        "envs/GATK4.yaml"
    shell:
        """
        gatk ValidateVariants -V {input} -R {params.ref} -D {params.dbsnp}
        """
